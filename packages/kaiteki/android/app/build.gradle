plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "moe.craftplacer.kaiteki"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "moe.craftplacer.kaiteki"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            storeFile file('keystore.pfx')
            storePassword = System.getenv('KEYSTORE_PASSWORD')
            keyAlias = 'release'
            keyPassword = System.getenv('KEYSTORE_PASSWORD')
        }
    }

    flavorDimensions 'version', 'distribution'

    productFlavors {
        unsigned {
            dimension 'version'
            getIsDefault().set(true)
        }

        signed {
            dimension 'version'
            signingConfig signingConfigs.release
        }

        foss {
            dimension 'distribution'
            getIsDefault().set(true)
        }

        store {
            dimension 'distribution'
            applicationIdSuffix '.store'
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
